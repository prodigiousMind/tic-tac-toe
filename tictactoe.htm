<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            background-color: #000;
            color: lime;
            font-family: monospace;
        }
        .grid-container {
            display: grid;
            grid-template-columns: auto auto auto;
            padding: 20px;
            gap: 10px;
            justify-content: center;
        }
        .grid-item {
            text-align: center !important;
            padding: 10px;
            font-size: 20px;
            width: 30px;
            height: 30px;
            border: 5px solid whitesmoke;
            background-color: seagreen;
        }
        .player-x {
            color: lime;
            
          /*  cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewport="0 0 100 100" style="fill:black;font-size:24px;"><text y="50%">❌</text></svg>') 16 16, auto;*/
        }
        .player-o {
            color: whitesmoke;
           /* cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewport="0 0 100 100" style="fill:black;font-size:24px;"><text y="50%">⭕</text></svg>') 16 16, auto;*/
        }
        .winning-combination {
            text-decoration: line-through;
        }
    </style>
</head>
<body>
    <center><h1>Tic Tac Toe</h1></center>
    <br>
    <h2 id="status"></h2>
    <div id="board" class="grid-container"></div>

    <script>
        let board = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '];
        let currentPlayer = 'X';

        function drawBoard() {
            let boardDiv = document.getElementById('board');
            boardDiv.innerHTML = '';
            for (let i = 0; i < board.length; i++) {
                let cell = document.createElement('div');
                cell.innerHTML = board[i];
                cell.className = 'grid-item ' + (board[i] === 'X' ? 'player-x done' : 'player-o done');
                cell.onclick = function() { makeMove(i); };
                boardDiv.appendChild(cell);
                if (document.getElementsByClassName("done")[i].innerHTML != " "){
                    document.getElementsByClassName("done")[i].style.backgroundColor="grey";
                }
            }
            if (currentPlayer === 'X'){
                document.getElementsByTagName("body")[0].style.cursor = "url('data:image/svg+xml;utf8,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20width=%2240%22%20height=%2240%22%20viewport=%220%200%20100%20100%22%20style=%22fill:black;font-size:24px;%22%3E%3Ctext%20y=%2250%25%22%3E%E2%9D%8C%3C/text%3E%3C/svg%3E') 16 16, auto";
            }else{
               document.getElementsByTagName("body")[0].style.cursor = "url('data:image/svg+xml;utf8,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20width=%2240%22%20height=%2240%22%20viewport=%220%200%20100%20100%22%20style=%22fill:black;font-size:24px;%22%3E%3Ctext%20y=%2250%25%22%3E%E2%AD%95%3C/text%3E%3C/svg%3E') 16 16, auto"; 
            }
            document.getElementById('status').innerHTML = '<center><span style="color: #fff;">Current Player: </span>' + (currentPlayer === 'X' ? '<span>❌</span></center>' : '<span>⭕</span></center>');
        }

        function makeMove(index) {
            if (board[index] === ' ') {
                board[index] = currentPlayer;
                currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
                drawBoard();
                let winner = checkWin();
                if (winner) {
                    setTimeout(function() {
                        alert('Player ' + winner + ' wins!');
                        board = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '];
                        drawBoard();
                    }, 100);
                }else if (!board.includes(" ")){
                    setTimeout(function() {
                        alert('No Player wins!');
                        board = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '];
                        drawBoard();
                    }, 100);
                }
            }
        }

        function checkWin() {
            const winConditions = [
                [0, 1, 2],
                [3, 4, 5],
                [6, 7, 8],
                [0, 3, 6],
                [1, 4, 7],
                [2, 5, 8],
                [0, 4, 8],
                [2, 4, 6]
            ];

            for (let condition of winConditions) {
                if (board[condition[0]] !== ' ' &&
                    board[condition[0]] === board[condition[1]] &&
                    board[condition[0]] === board[condition[2]]) {
                    for (let index of condition) {
                        document.getElementsByClassName('grid-item')[index].classList.add('winning-combination');
                    }
                    return board[condition[0]];
                }
            }

            return null;
        }

        drawBoard();
    </script>
</body>
</html>
